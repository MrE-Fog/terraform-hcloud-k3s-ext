
## String to partially override external-dns.fullname template (will maintain the release name)
# nameOverride:

## String to fully override external-dns.fullname template
# fullnameOverride:

## Deployment pod host aliases
## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
##
hostAliases: []

## K8s resources type to be observed for new DNS entries by ExternalDNS
##
sources:
    # - crd
    - service
    - ingress
    # - contour-httpproxy

## DNS provider where the DNS records will be created. Available providers are:
## - alibabacloud, aws, azure, azure-private-dns, cloudflare, coredns, designate, digitalocean, google, hetzner, infoblox, linode, rfc2136, transip
##
provider: ${provider}

## Flags related to processing sources
## ref: https://github.com/kubernetes-sigs/external-dns/blob/master/pkg/apis/externaldns/types.go#L272
##
## Limit sources of endpoints to a specific namespace (default: all namespaces)
##
namespace: ""
## Templated strings that are used to generate DNS names from sources that don't define a hostname themselves
##
fqdnTemplates: []
## Combine FQDN template and annotations instead of overwriting
##
combineFQDNAnnotation: false
## Ignore hostname annotation when generating DNS names, valid only when fqdn-template is set
##
ignoreHostnameAnnotation: false
## Allow external-dns to publish DNS records for ClusterIP services
##
publishInternalServices: false
## Allow external-dns to publish host-ip for headless services
##
publishHostIP: false
## The service types to take care about (default: all, options: ClusterIP, NodePort, LoadBalancer, ExternalName)
##
serviceTypeFilter: []

## Cloudflare configuration to be set via arguments/env. variables
##
cloudflare:
    ## `CF_API_TOKEN` to set in the environment
    ##
    apiToken:
    ## `CF_API_KEY` to set in the environment
    ##
    apiKey:
    ## Use an existing secret with keys "cloudflare_api_token" or "cloudflare_api_key" defined.
    ## This ignores cloudflare.apiToken, and cloudflare.apiKey
    ##
    secretName: ${secret_name}
    ## `CF_API_EMAIL` to set in the environment
    ##
    email: ${cloud_flare_api_email}
    ## Enable the proxy feature of Cloudflare
    ##
    proxied: ${cloud_flare_api_proxied}

## Hetzner configuration to be set via arguments/env. variables
##
hetzner:
    ## Hetzner API token to use. If you do not want to set it clear-text,
    ## create the secret yourself and specify `hetzner.secretName`.
    ##
    ## Mutually exclusive with `hetzner.secretName`.
    ##
    token:

    ## Use an existing secret. Mutually exclusive with `hetzner.token`
    ##
    secretName: ${secret_name}
    secretKey: api-key




## Limit possible target zones by domain suffixes (optional)
##
domainFilters: []
## Exclude subdomains (optional)
##
excludeDomains: []
## Filter target zones by zone domain (optional)
##
zoneNameFilters: []
## Limit possible target zones by zone id (optional)
##
zoneIdFilters: []
## Filter sources managed by external-dns via annotation using label selector semantics (optional)
##
annotationFilter: ""
## When enabled, prints DNS record changes rather than actually performing them
##
dryRun: false
## When enabled, triggers run loop on create/update/delete events (optional, in addition of regular interval)
##
triggerLoopOnEvent: false
## Adjust the interval for DNS updates
##
interval: "1m"
## Verbosity of the ExternalDNS logs. Available values are:
## - panic, debug, info, warning, error, fatal, trace
##
logLevel: info
## Formats of the ExternalDNS logs. Available values are:
## - text, json
##
logFormat: text
## Modify how DNS records are synchronized between sources and providers (options: sync, upsert-only)
##
policy: sync
## Registry Type. Available types are: txt, noop
## ref: https://github.com/kubernetes-sigs/external-dns/blob/master/docs/proposal/registry.md
##
registry: "txt"
## TXT Registry Identifier
##
txtOwnerId: ${ed_owner_id}
## Prefix to create a TXT record with a name following the pattern prefix.<CNAME record> (Mutual exclusive with txt-suffix)
##
txtPrefix: "exdns_"
## Suffix to create a TXT record with a name following the pattern <CNAME record>.suffix (Mutual exclusive with txt-prefix)
##
# txtSuffix: ""






## Kubernetes svc configutarion
##
service:
    enabled: true
    ## Kubernetes svc type
    ##
    type: ClusterIP
    port: 7979
    ## Specify the nodePort value for the LoadBalancer and NodePort service types for the client port
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    ##
    # nodePort:
    ## Static clusterIP or None for headless services
    ##
    # clusterIP: ""
    ## External IP list to use with ClusterIP service type
    ##
    externalIPs: []
    ## Use loadBalancerIP to request a specific static IP,
    ## otherwise leave blank
    ##
    ##loadBalancerIP:
    ## Address that are allowed when svc is LoadBalancer
    ##
    loadBalancerSourceRanges: []
    ## Provide any additional annotations which may be required. This can be used to
    ## set the LoadBalancer service type to internal only.
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
    ##
    annotations: {}

    ## Provide any additional labels which may be required. This can be used to
    ## have external-dns show up in `kubectl cluster-info`
    ##  kubernetes.io/cluster-service: "true"
    ##  kubernetes.io/name: "external-dns"
    ##
    labels: {}

## ServiceAccount parameters
## https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
##
serviceAccount:
    create: true
    ## Service Account for pods
    ##
    name:
    ## Annotations for the Service Account
    ##
    annotations: {}
    ## Automount API credentials for a service account.
    ##
    automountServiceAccountToken: true

## RBAC parameteres
## https://kubernetes.io/docs/reference/access-authn-authz/rbac/
##
rbac:
    create: true
    ## Deploys ClusterRole by Default
    ##
    clusterRole: true
    ## RBAC API version
    ##
    apiVersion: v1
    ## Podsecuritypolicy
    ##
    pspEnabled: false


## Prometheus Exporter / Metrics
##
metrics:
    enabled: false
    ## Metrics exporter pod Annotation and Labels
    ##
    # podAnnotations:
    #   prometheus.io/scrape: "true"
    #   prometheus.io/port: "7979"

    ## Prometheus Operator ServiceMonitor configuration
    ##
    serviceMonitor:
        enabled: false
        ## Namespace in which Prometheus is running
        ##
        # namespace: monitoring

        ## Interval at which metrics should be scraped.
        ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
        ##
        # interval: 10s

        ## Timeout after which the scrape is ended
        ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
        ##
        # scrapeTimeout: 10s

        ## ServiceMonitor selector labels
        ## ref: https://github.com/bitnami/charts/tree/master/bitnami/prometheus-operator#prometheus-configuration
        ##
        # selector:
        #   prometheus: my-prometheus